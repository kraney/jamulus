image: docker:19.03.12

variables:
  # When using dind service we need to instruct docker, to talk with the
  # daemon started inside of the service. The daemon is available with
  # a network connection instead of the default /var/run/docker.sock socket.
  #
  # The 'docker' hostname is the alias of the service container as described at
  # https://docs.gitlab.com/ee/ci/docker/using_docker_images.html#accessing-the-services
  #
  # Note that if you're using GitLab Runner 12.7 or earlier with the Kubernetes executor and Kubernetes 1.6 or earlier,
  # the variable must be set to tcp://localhost:2375 because of how the
  # Kubernetes executor connects services to the job container
  # DOCKER_HOST: tcp://localhost:2375
  #
  DOCKER_HOST: tcp://docker:2375
  #
  # This will instruct Docker not to start over TLS.
  DOCKER_TLS_CERTDIR: ""
  # GCP project ID for image repo
  PROJECT_ID:           rehearsal-284416
  GCR_REPO:             gcr.io/${PROJECT_ID}
  CACHE_TAG:            gitlab
  TAG:                  gitlab
  CACHE_IMAGE:          gcr.io/${PROJECT_ID}/jamulus:${CACHE_TAG}

services:
  - docker:19.03.12-dind

before_script:
  - docker info

build:
  stage: build
  script:
    - echo ${GOOGLE_CLOUD_ACCOUNT} | docker login -u _json_key --password-stdin https://gcr.io
    - echo Using ${CACHE_IMAGE} for cache
    - docker build --cache-from ${CACHE_IMAGE} --build-arg BUILDKIT_INLINE_CACHE=1 -t ${GCR_REPO}/jamulus:$TAG .
    #- docker run my-docker-image /script/to/run/tests
    - docker push ${GCR_REPO}/jamulus:$TAG
